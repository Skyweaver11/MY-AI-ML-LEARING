# -*- coding: utf-8 -*-
"""Wine Quality Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IEKXZ5QXH8c2aH70SEsLNBn7Pdx-7wfT
"""

import numpy as np
import pandas as pd
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn import metrics

wine_data.shape

wine_data.isnull().sum()

wine_data.describe()

coorelation=wine_data.corr()
#constructing the heatmap to understand the coorelation
plt.figure(figsize=(12,12))
sns.heatmap(coorelation,cbar=True,square=True,fmt='.2f',annot=True,annot_kws={'size':8},cmap='Blues')

x=wine_data.drop(['quality'],axis=1)
y=wine_data['quality']
print(x)
print(y)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)
print(x.shape,x_train.shape,x_test.shape)

model=XGBRegressor()
# TRIANING THE MODEL WITH X_TRAIN
model.fit(x_train,y_train)

train_data_prediction=model.predict(x_train)
print(train_data_prediction)

score_1=metrics.r2_score(y_train,train_data_prediction)
print('R square error :',score_1)
score2=metrics.mean_absolute_error(y_train,train_data_prediction)
print('Mean absolute error :',score2)

plt.scatter(y_train,train_data_prediction)
plt.xlabel('Actual price')
plt.ylabel('Predicted price')
plt.title('Actual price vs Predicted price')
plt.show()

#predicting the test data
test_data_prediction = model.predict(x_test)

# Calculate R-squared error
score_3 = metrics.r2_score(y_test, test_data_prediction)
print('R square error:', score_3)

# Calculate Mean Absolute Error (MAE)
score_4 = metrics.mean_absolute_error(y_test, test_data_prediction)
print('Mean absolute error:', score_4)