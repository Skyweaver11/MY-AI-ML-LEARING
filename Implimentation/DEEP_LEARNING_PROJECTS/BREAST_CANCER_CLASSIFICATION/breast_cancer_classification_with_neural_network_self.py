# -*- coding: utf-8 -*-
"""Breast Cancer Classification with Neural Network self.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1V94RtYPuAmZAa5z822Zo5abcj41U1IV-

https://drive.google.com/file/d/1HQqUCF23fihnE3aCbx2MNPmER9o_If_m/view

IMPORTING DEPENDANCIES
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import cv2
from PIL import Image
import tensorflow as tf
from tensorflow import keras
tf.random.set_seed(3)
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score

"""DATASET IMPORT KERENGE"""

import sklearn.datasets
breast_cancer=sklearn.datasets.load_breast_cancer()
print(breast_cancer)

data_frame=pd.DataFrame(breast_cancer.data,columns=breast_cancer.feature_names)
data_frame['Label']=breast_cancer.target
data_frame.head()

data_frame.shape

data_frame.info()

data_frame.describe()

x=data_frame.drop(columns='Label',axis=1)
y=data_frame['Label']
print(x)
print(y)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)
print(x.shape,x_train.shape,x_test.shape)

scaler=StandardScaler()
x_train_std=scaler.fit_transform(x_train)
x_test_std=scaler.transform(x_test)

print(x_train_std)

model=keras.Sequential([
    keras.layers.Flatten(input_shape=(30,)),
    keras.layers.Dense(20,activation='relu'),
    keras.layers.Dense(2,activation='sigmoid')
])

model.compile(optimizer='adam',
               loss='sparse_categorical_crossentropy',
               metrics=['accuracy']
               )

history=model.fit(x_train_std,y_train,validation_split=0.1,epochs=10)

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.title('Model Accuracy')
plt.ylabel('Accuracy')
plt.xlabel('Epoch')
plt.show()

loss,accuracy=model.evaluate(x_test_std,y_test)
print(accuracy)

y_pred=model.predict(x_test_std)

print(y_pred[0])

print(y_pred)

y_pred_label=[np.argmax(i) for i in y_pred]
print(y_pred_label)

"""BUILDING THE PREDICTIVE SYSTEM

"""

input_data=(17.99,10.38,122.8,1001,0.1184,0.2776,0.3001,0.1471,0.2419,0.07871,1.095,0.9053,8.589,153.4,0.006399,0.04904,0.05373,0.01587,0.03003,0.006193,25.38,17.33,184.6,2019,0.1622,0.6656,0.7119,0.2654,0.4601,0.1189)
input_npdata=np.asarray(input_data)
input_data_reshaped=input_npdata.reshape(1,-1)
input_std=scaler.transform(input_data_reshaped)
prediction=model.predict(input_std)
print(prediction)
prediction_label=[np.argmax(prediction)]
print(prediction_label)
if (prediction_label[0]==0):
  print('The breast cancer is Malignant')
else:
  print('The breast cancer is Benign')

